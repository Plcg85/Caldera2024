/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import BasesDeDatos.DevolverConexion;
import Funcionalidades.VariablesTiempo;
import java.io.IOException;
import java.util.Timer;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Pedro Luis
 */
public class VentanaConexionInternet extends javax.swing.JFrame {

    /**
     * Creates new form VentanaConexionInternet
     */
    DefaultTableModel tablaConexion; //el modelo de la tabla que pertenece a esta ventana hay que pasarselo a la tarea

    public VentanaConexionInternet() throws SQLException, InterruptedException, IOException {

        initComponents();
        this.setTitle("Conexion a internet");

        tablaConexion = (DefaultTableModel) tablaConexiones.getModel();

        rellenaTablaConexiones();

    }//final Constructor VentanaConexionInternet

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConexiones = new javax.swing.JTable();
        botonActualizarTablaConexiones = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(640, 480));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tablaConexiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conexion fallida", "Fecha del fallo"
            }
        ));
        jScrollPane1.setViewportView(tablaConexiones);

        botonActualizarTablaConexiones.setText("Actualizar Lista");
        botonActualizarTablaConexiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarTablaConexionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonActualizarTablaConexiones)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonActualizarTablaConexiones))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed


    }//GEN-LAST:event_formWindowClosed

    //evento del botonActualizarTablaConexiones
    private void botonActualizarTablaConexionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarTablaConexionesActionPerformed
        try {
            rellenaTablaConexiones();
        } catch (SQLException ex) {
            Logger.getLogger(VentanaConexionInternet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaConexionInternet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonActualizarTablaConexionesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizarTablaConexiones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaConexiones;
    // End of variables declaration//GEN-END:variables

    //este metodo se llama en el constructor de la ventana y rellena la tabla con los datos de las conexiones
    private void rellenaTablaConexiones() throws SQLException, IOException {

        int numeroPosicionesTabla = tablaConexion.getRowCount();

        //se borra la tabla si no esta vacia
        if (numeroPosicionesTabla != 0) {

            borraTablaConexiones(numeroPosicionesTabla);

        }

        llenaTablaConexiones();

    }//final metodo rellenaTablaConexiones

    //este metodo borra la tabla de conexiones
    private void borraTablaConexiones(int numeroPosicionesTabla) {

        for (int i = 0; i < numeroPosicionesTabla; i++) {

            tablaConexion.removeRow(0);

        }//final bucle borra tabla
    }//final metodo borraTablaConexiones

    private void llenaTablaConexiones() throws SQLException, IOException {

        Connection conexion = DevolverConexion.devolverConexionParaCrearTablas();
        Statement stmt = conexion.createStatement();
        String consulta = "select * from conexion_internet;";
        ResultSet resultado = stmt.executeQuery(consulta);

        int contador = 0;

        while (resultado.next()) {

            String error = resultado.getString("estado_conexion");
            String fecha = resultado.getString("created_at");
            tablaConexion.addRow(new Object[]{error, fecha});
            contador++;
                        
        }//final while que recorre el result set

        conexion.close();
    }

}//final clase ventanaConexionInternet
